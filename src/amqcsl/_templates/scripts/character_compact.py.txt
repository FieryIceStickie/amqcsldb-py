import logging
import os

from dotenv import load_dotenv
from log import setup_logging

import amqcsl
from amqcsl.workflows import character as cm

_ = load_dotenv()

artists: cm.ArtistDict = {}


def main(logger: logging.Logger):
    with amqcsl.DBClient(
        username=os.getenv('AMQ_USERNAME'),
        password=os.getenv('AMQ_PASSWORD'),
    ) as client:
        artist_to_meta = cm.compact_make_artist_to_meta(client, artists)
        my_group = client.groups['INSERT GROUP NAME HERE']
        for track in client.iter_tracks(groups=[my_group]):
            meta = client.get_metadata(track)
            if (artist := cm.queue_character_metadata(client, track, artist_to_meta, meta)) is not None:
                cm.prompt(track, msg=f'Unidentified artist {artist.name}, continue?', continue_on_empty=True)

        if cm.prompt(client.queue):
            client.commit()


if __name__ == '__main__':
    logger = logging.getLogger('INSERT SCRIPT NAME HERE')
    setup_logging()
    main(logger)
