import logging
import os

from dotenv import load_dotenv
from log import setup_logging

import amqcsl
from amqcsl.utils import ArtistDict, compact_make_artist_to_meta, prompt, queue_character_metadata

_ = load_dotenv()

artists: ArtistDict = {}


def main(logger: logging.Logger):
    with amqcsl.DBClient(
        username=os.getenv('AMQ_USERNAME'),
        password=os.getenv('AMQ_PASSWORD'),
    ) as client:
        artist_to_meta = compact_make_artist_to_meta(client, artists)
        ip_group = client.groups['INSERT GROUP NAME HERE']
        for track in client.iter_tracks(groups=[ip_group]):
            meta = client.get_metadata(track)
            if (artist := queue_character_metadata(client, track, artist_to_meta, meta)) is not None:
                prompt(track, msg=f'Unidentified artist {artist.name}, continue?')

        if prompt(client.queue):
            client.commit()


if __name__ == '__main__':
    logger = logging.getLogger(__name__)
    setup_logging()
    main(logger)
